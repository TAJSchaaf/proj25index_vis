[{"name":"app.R","content":"# Install pacman if not installed\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\n\n# Load required packages\npacman::p_load(\n  \"here\", \"tidyverse\", \"dplyr\", \"shiny\", \"bs4Dash\", \"patchwork\", \n  \"ggplot2\", \"scales\"\n)\n\n# Select file with data\nlibrary(here)\nindexfm <- read.csv(here(\"index_cleaned.csv\"), header = TRUE)\n\n# Convert section and reference_type to factors\nindexfm <- indexfm %>%\n  mutate(across(c(section, reference_type), as.factor))\n\n# Sort results by title\nindexfm <- indexfm %>%\n  arrange(title)\n\nui <- bs4DashPage(\n  \n  title = \"Project 2025 Index Visualiser\",\n  help = NULL, # remove help checkbox\n  header = bs4DashNavbar(\n    title = \"Project 2025 Index Visualiser\",\n    fixed = TRUE\n  ),\n  sidebar = bs4DashSidebar(\n    skin = \"light\",\n    title = \"Menu\",\n    collapsed = FALSE,\n    bs4SidebarMenu(\n      \n      # Main Page\n      bs4SidebarMenuItem(\n        \"Visualizations\", tabName = \"general\", icon = icon(\"chart-bar\")\n      ),\n      \n      # References Accordion Edition\n      bs4SidebarMenuItem(\n        \"Reference Results\", tabName = \"edition\", icon = icon(\"book\")\n      ),\n      \n      # Project About\n      bs4SidebarMenuItem(\n        \"About Project\", tabName = \"about\", icon = icon(\"info-circle\")\n      ),\n      \n      # Search function\n      actionButton(inputId = \"confirm_button\", label = \"Confirm Selection\"),\n      \n      selectizeInput(\n        inputId = \"title_select\",\n        label = \"Select Keywords\",\n        choices = NULL,\n        multiple = TRUE,\n        options = list(placeholder = \"Type to search titles...\")\n      )\n    )\n  ),\n  \n  body = bs4DashBody(\n    tags$head(\n      tags$script(src = \"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js\"),\n      tags$style(HTML(\"\n        body {\n          zoom: 1.1; /* Adjust the zoom level to make everything appear larger */\n        }\n        .content-wrapper {\n          padding: 10px; /* Reduce padding if needed */\n        }\n      \"))\n    ),\n    bs4TabItems(\n      \n      # Main Page\n      bs4TabItem(\n        tabName = \"general\",\n        h2(\"Project 2025 Index Visualiser\"),\n        fluidRow(\n          column(\n            width = 12,\n            box(\n              width = NULL,\n              title = \"How to use this website\",\n              \"Select the keywords you want to explore using the dropdown menu or checkboxes, and click the Confirm button to load related data.\",br(), br(),\n              \"View keywords by chapter section on the heatmap, examine the statistics related to keyword use in the table, and compare the frequency of reference types in the bar chart.\", br(), br(),\n              \"To view specific references within the document, go to the Reference Results tab in the sidebar.\"\n            )\n          )\n        ),\n        \n        # Heatmap by chapter\n        h3(\"Frequency of Keywords per Chapter\"),\n        plotOutput(\"heatmap\"),\n        \n        # Statistics table\n        h3(\"Statistics of Keyword Use\"),\n        textOutput(\"disclaimer\"),\n        tableOutput(\"title_stats_table\"),\n        \n        # Type frequency bar chart\n        h3(\"Frequency of Keyword Reference Types\"),\n        plotOutput(\"bar_chart\")\n      ),\n      \n      # Reference Result Edition\n      bs4TabItem(\n        tabName = \"edition\",\n        h2(\"Reference Results\"),\n        \n        # Filtering options\n        fluidRow(\n          column(\n            width = 12,\n            box(\n              width = NULL,\n              title = \"How to use Reference Results\",\n              HTML(\"On this page, you can view the context in which selected keywords are used within the document, organized by chapter section. Opening a chapter section reveals the selected keywords used in that chapter, along with an AI-generated summary of their usage.\n                   <\/br><\/br>\n                   Clicking on a page number will take you directly to the corresponding page in the Project 2025 document. Additionally, you can sort and filter the results by reference type: \n                      <span style='background-color: #ffffb0; font-weight: bold;'>Statement<\/span>,\n                      <span style='background-color: #ff7891; font-weight: bold;'>Critique<\/span>, \n                      <span style='background-color: #b0ffff; font-weight: bold;'>Recommendation<\/span>,  or \n                      <span style='background-color: #b0b0b0; font-weight: bold;'>Other<\/span>.\n                    This helps you quickly locate and analyze the most relevant information.\")\n            ),\n            checkboxGroupInput(\n              inputId = \"reference_type_filter\",\n              label = \"Filter by Reference Type\",\n              choices = c(\"Statement\", \"Critique\", \"Recommendation\", \"Other\"),\n              selected = c(\"Statement\", \"Critique\", \"Recommendation\", \"Other\"),\n              inline = TRUE\n            )\n          )\n        ),\n        \n        # Accordion output\n        uiOutput(\"accordion\")\n      ),\n      \n      # About Page\n      bs4TabItem(\n        tabName = \"about\",\n        h2(\"About this project\"),\n        HTML(\"This project was developed with the aim of improving the accessibility and analysis of the Project 2025 document by providing an intuitive way to explore its contents based on specific keywords. The primary goal of this tool is to allow users to quickly identify the context in which selected keywords appear throughout the document, organized by sections. By utilizing an interactive heatmap, reference filters, and detailed summaries, this app facilitates the identification and analysis of important references, enabling users to gain deeper insights into the documentâ€™s structure and key themes. This tool is particularly useful for those looking to focus on particular topics and understand their significance within the larger context of the document.\n             <\/br><\/br>\n              The application was designed to provide an interactive, user-friendly experience with features such as keyword filtering, page navigation, and customizable results views. This makes it easier for users to navigate the document, find relevant sections, and examine the relationships between references and specific keywords. Whether the user is conducting a thorough review or simply seeking a quick overview, this tool is a valuable resource for efficiently parsing the extensive content of the Project 2025 document.\n            <\/br><\/br>\n              I would like to express my heartfelt gratitude to the original producers of the code, the Autonomy Data Unit, and the various resources used in the development of this project. Their contributions laid the foundation for the functionality that drives this app. \n             <\/br><\/br>\n             A special thanks goes to the individuals who provided assistance, feedback, and guidance during the development process. Their support has been crucial in refining the app and ensuring that it meets the needs of users. Without their collaboration, this project would not have come to fruition.\")\n      )\n    )\n  ),\n  \n  # Footer\n  footer = bs4DashFooter(\"Thea Schaaf BA, University of Graz (2025)\")\n)\n\nserver <- function(input, output, session) {\n  \n  # Dynamically update the keyword choices\n  observe({\n    updateSelectizeInput(session, \"title_select\", choices = unique(indexfm$title), server = TRUE)\n  })\n  \n  # Reactive value for selected keywords\n  selected_titles <- reactiveVal(NULL)\n  \n  # Update selected keywords when the Confirm button is pressed\n  observeEvent(input$confirm_button, {\n    selected_titles(input$title_select)\n  })\n  \n  \n  # Heatmap for visualisations page\n  output$heatmap <- renderPlot({\n    titles <- selected_titles()\n    if (is.null(titles) || length(titles) == 0) {\n      plot(1, type = \"n\", xlab = \"\", ylab = \"\", main = \"Please select keywords in sidebar.\")\n      return()\n    }\n    \n    filtered_data <- indexfm %>%\n      filter(title %in% titles) %>%\n      count(title, section_simple)\n    \n    all_combinations <- expand.grid(\n      title = titles,\n      section_simple = unique(indexfm$section_simple)\n    )\n    \n    complete_data <- all_combinations %>%\n      left_join(filtered_data, by = c(\"title\", \"section_simple\")) %>%\n      mutate(n = ifelse(is.na(n), 0, n))\n    \n    \n    # Generate heat map\n    ggplot(complete_data, aes(x = section_simple, y = reorder(title, n), fill = n)) +\n      geom_tile(color = \"black\") +\n      scale_fill_gradient(low = \"white\", high = \"red\")+\n      labs(title = \"Keyword Occurrences by Chapter Section\", x = NULL, y = NULL, fill = \"Frequency\") +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate section names for better readability\n        strip.text = element_blank() \n      ) +\n      coord_fixed(ratio = 3)  # Height of cells\n  })\n  \n  # Keyword statistics table for the Visualisations page\n  output$title_stats_table <- renderTable({\n    titles <- selected_titles()\n    \n    # If no keywords are selected, return an empty table\n    if (is.null(titles) || length(titles) == 0) {\n      return(data.frame(\"Keyword Statistics\" = \"Please select keywords and click confirm in the sidebar.\"))\n    }\n    \n    # Filter data for the selected keywords\n    filtered_data <- indexfm %>%\n      filter(title %in% titles)\n    \n    # Create a summary table for each keyword\n    stats_table <- filtered_data %>%\n      group_by(title) %>%\n      summarise(\n        total_references = n(),\n        total_sections = n_distinct(section),\n        sections_percentage = round((n_distinct(section)/36) * 100, 2),\n        \n        # Calculate the total counts and percentages for each reference type\n        total_statements = sum(reference_type == \"Statement\"),\n        statement_percentage = round((total_statements / total_references) * 100, 2),\n        \n        total_critique = sum(reference_type == \"Critique\"),\n        critique_percentage = round((total_critique / total_references) * 100, 2),\n        \n        total_recommendation = sum(reference_type == \"Recommendation\"),\n        recommendation_percentage = round((total_recommendation / total_references) * 100, 2),\n        \n        total_other = sum(reference_type == \"Other\"),\n        other_percentage = round((total_other / total_references) * 100, 2)\n      ) %>%\n      arrange(desc(total_references))\n    \n    # Format the percentages and total values together for each reference type\n    stats_table <- stats_table %>%\n      mutate(\n        Keyword = title,\n        Total = total_references,\n        Sections = paste(total_sections, \" of 36\", \" (\", sections_percentage, \"%)\", sep = \"\"),\n        Statements = paste(total_statements, \" (\", statement_percentage, \"%)\", sep = \"\"),\n        Crits = paste(total_critique, \" (\", critique_percentage, \"%)\", sep = \"\"),\n        Recs = paste(total_recommendation, \" (\", recommendation_percentage, \"%)\", sep = \"\"),\n        Other = paste(total_other, \" (\", other_percentage, \"%)\", sep = \"\")\n      ) %>%\n      select(-title, -total_references, -total_sections, -sections_percentage, -total_statements, -statement_percentage, -total_critique, -critique_percentage,\n             -total_recommendation, -recommendation_percentage, -total_other, -other_percentage)  # Remove intermediate columns\n    \n    # Return the formatted table\n    stats_table\n  }, bordered = TRUE, colnames = TRUE, hover = TRUE, striped = TRUE)\n  \n  # Stacked Bar Chart for Visualisation page\n  output$bar_chart <- renderPlot({\n    titles <- selected_titles()\n    \n    # Error message\n    if (is.null(titles) || length(titles) == 0) {\n      plot(1, type = \"n\", xlab = \"\", ylab = \"\", main = \"Please select titles and click Confirm\")\n      return()\n    }\n    \n    filtered_data <- indexfm %>%\n      filter(title %in% titles) %>%\n      count(title, reference_type)\n    \n    # Generate plot\n    ggplot(filtered_data, aes(x = reorder(title, n), y = n, fill = reference_type)) +\n      geom_bar(stat = \"identity\", position = \"stack\") +\n      labs(\n        title = \"Keyword Frequency by Reference Type\",\n        x = \"Title\", y = \"Frequency\", fill = \"Reference Type\"\n      ) +\n      scale_fill_manual(values = c(\n        \"Statement\" = \"#fce61a\", \n        \"Critique\" = \"#ff7891\", \n        \"Recommendation\" = \"#b0ffff\", \n        \"Other\" = \"#b0b0b0\"\n      )) +\n      coord_flip() +\n      theme_minimal()\n  })\n  \n  # Results accordion for Results Edition page\n  output$accordion <- renderUI({\n    titles <- selected_titles()\n    \n    if (is.null(titles) || length(titles) == 0) {\n      return(h4(\"Please select topics and click Confirm to view their references.\"))\n    }\n    \n    # Filter and sort the data\n    filtered_data <- indexfm %>%\n      filter(title %in% titles) %>%\n      filter(reference_type %in% input$reference_type_filter) %>%\n      arrange(page)\n    \n    # Group by section_index and retain section name for display\n    sections <- filtered_data %>%\n      group_by(section_index, section) %>%\n      summarise(n_references = n(), .groups = \"drop\") %>%\n      arrange(section_index)  # Sort by section_index\n    \n    if (nrow(sections) == 0) {\n      return(h4(\"No references found for the selected criteria.\"))\n    }\n    \n    # Define a mapping of reference_type to colors\n    reference_colors <- c(\n      \"Critique\" = \"#ff7891\",\n      \"Other\" = \"#b0b0b0\",\n      \"Recommendation\" = \"#b0ffff\",\n      \"Statement\" = \"#fce61a\"\n    )\n    \n    # Create accordion wrapper\n    do.call(tags$div, c(\n      list(\n        class = \"accordion\",\n        id = \"edition_accordion\"\n      ),\n      lapply(seq_len(nrow(sections)), function(i) {\n        section_name <- as.character(sections$section[i])  # Use section for display\n        current_section_index <- as.character(sections$section_index[i])  # Use section_index for filtering\n        section_id <- paste0(\"collapse_edition_accordion_\", i)\n        \n        references <- filtered_data %>%\n          filter(current_section_index == section_index) %>%\n          arrange(page)\n        \n        references_html <- lapply(1:nrow(references), function(j) {\n          ref <- references[j, ]\n          ref_color <- reference_colors[ref$reference_type]\n          \n          sprintf(\n            \"<div style='background-color: %s; padding: 10px; margin-bottom: 5px; border-radius: 5px; display: flex; justify-content: space-between; align-items: center;'>\n      <span style='font-size: 1.25em;'><b>%s<\/b><\/span>\n      <span style='font-size: 1.25em;'><b><a href='https://archive.org/details/2025_MandateForLeadership_FULL/page/%d/mode/2up' target = '_blank'>%d.<\/a><\/b><\/span> <!-- page number -->\n    <\/div>\n    <span>%s<\/span><\/br><\/br>\", \n            ref_color, ref$title, ref$page, ref$page, ref$summary\n          )\n        }) %>%\n          unlist() %>%\n          paste(collapse = \"\")\n        \n        tags$div(\n          class = \"card\",\n          tags$div(\n            class = \"card-header\",\n            id = paste0(\"heading_\", section_id),\n            tags$h2(\n              class = \"mb-0\",\n              tags$button(\n                class = \"btn btn-link btn-block text-left\",\n                `data-toggle` = \"collapse\",\n                `data-target` = paste0(\"#\", section_id),\n                `aria-expanded` = \"false\",  # This will toggle dynamically\n                `aria-controls` = section_id,\n                paste(current_section_index, \": \", section_name, \"(\", nrow(references), \" references)\"),\n                style = \"font-size: .7em; color: black; border-radius: 5px;\"  # Custom style\n              )\n            )\n          ),\n          tags$div(\n            id = section_id,\n            class = \"collapse\",\n            `aria-labelledby` = paste0(\"heading_\", section_id),\n            `data-parent` = \"#edition_accordion\",\n            tags$div(\n              class = \"card-body\",\n              HTML(references_html)\n            )\n          )\n        )\n      })\n      \n    ))\n  })\n  \n  # Disclaimer for table text\n  output$disclaimer <- renderText({\n    \"The keyword results are categorized into four types (statement, critique, recommendations, and other) based on the word choice in each AI-generated summary.\n    Approximately 53% of references are statements, 40% are recommendations, 4% are critiques, and 3% are other.\n    This differentiation is used to identify trends and relevant information. However, be aware that results can be miscategorized.\"\n  })\n  \n}\n\nshinyApp(ui, server)\n","type":"text"},{"name":"proj25_github_pages.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
